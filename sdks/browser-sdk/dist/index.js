import{GroupUpdatedCodec as e,ContentTypeGroupUpdated as t}from"@xmtp/content-type-group-updated";import{ContentTypeText as s,TextCodec as i}from"@xmtp/content-type-text";import{ContentTypeId as n,EncodedContent as r,ListMessagesOptions as a,ListConversationsOptions as o,PermissionPolicySet as d,CreateGroupOptions as c,CreateDMOptions as l,Consent as u,GroupMember as h,MessageDisappearingSettings as g,GroupPermissionsOptions as p,GroupMessageKind as m,DeliveryStatus as y,SignatureRequestType as I,ConversationType as v}from"@xmtp/wasm-bindings";export{Consent,ConsentEntityType,ConsentState,ContentType,ContentTypeId,ConversationListItem,ConversationType,CreateDMOptions,CreateGroupOptions,DeliveryStatus,EncodedContent,GroupMember,GroupMembershipState,GroupMessageKind,GroupMetadata,GroupPermissions,GroupPermissionsOptions,HmacKey,InboxState,Installation,ListConversationsOptions,ListMessagesOptions,LogOptions,Message,MessageDisappearingSettings,MetadataField,PermissionLevel,PermissionPolicy,PermissionPolicySet,PermissionUpdateType,SignatureRequestType,SortDirection}from"@xmtp/wasm-bindings";import{v4 as w}from"uuid";import{ContentTypeId as M}from"@xmtp/content-type-primitives";const f=e=>{console.error(`Worker error on line ${e.lineno} in "${e.filename}"`),console.error(e.message)};class b{#e;#t;#s=new Map;constructor(e,t){this.#e=e,this.#e.addEventListener("message",this.handleMessage),this.#e.addEventListener("error",f),this.#t=t}sendMessage(e,t){const s=w();this.#e.postMessage({action:e,id:s,data:t});return new Promise(((e,t)=>{this.#s.set(s,{resolve:e,reject:t})}))}handleMessage=e=>{const t=e.data;this.#t&&console.log("client received event data",t);const s=this.#s.get(t.id);s&&(this.#s.delete(t.id),"error"in t?s.reject(t.error):s.resolve(t.result))};handleStreamMessage=(e,t)=>{const s=s=>{const i=s.data;i.streamId===e&&("error"in i?t(i.error,null):t(null,i.result))};return this.#e.addEventListener("message",s),()=>{this.#e.removeEventListener("message",s)}};close(){this.#e.removeEventListener("message",this.handleMessage),this.#e.removeEventListener("error",f),this.#e.terminate()}}class S{#i=!1;#n;#r;#a;#o;onReturn=void 0;onError=void 0;constructor(){this.#a=[],this.#n=null,this.#r=null,this.#o=null,this.#i=!1}#d(){this.#a=[],this.#n=null,this.#r=null,this.#i=!0}get error(){return this.#o}get isDone(){return this.#i}callback=(e,t)=>{if(e)return this.#o=e,void(this.#r&&(this.#r(e),this.#d(),this.onError?.(e)));this.#i||(this.#n?(this.#n({done:!1,value:t}),this.#n=null):this.#a.push(t))};next=()=>this.#o?(this.#d(),this.onError?.(this.#o),Promise.reject(this.#o)):this.#a.length>0?Promise.resolve({done:!1,value:this.#a.shift()}):this.#i?Promise.resolve({done:!0,value:void 0}):new Promise(((e,t)=>{this.#n=e,this.#r=t}));return=e=>(this.#d(),this.onReturn?.(),Promise.resolve({done:!0,value:e}));[Symbol.asyncIterator](){return this}}const x=e=>new M({authorityId:e.authorityId,typeId:e.typeId,versionMajor:e.versionMajor,versionMinor:e.versionMinor}),A=e=>new n(e.authorityId,e.typeId,e.versionMajor,e.versionMinor),k=e=>({authorityId:e.authorityId,typeId:e.typeId,versionMajor:e.versionMajor,versionMinor:e.versionMinor}),P=e=>new M({authorityId:e.authorityId,typeId:e.typeId,versionMajor:e.versionMajor,versionMinor:e.versionMinor}),G=e=>({type:x(e.type),parameters:Object.fromEntries(e.parameters),fallback:e.fallback,compression:e.compression,content:e.content}),D=e=>new r(A(e.type),new Map(Object.entries(e.parameters)),e.fallback,e.compression,e.content),N=e=>({type:k(e.type),parameters:e.parameters,fallback:e.fallback,compression:e.compression,content:e.content}),C=e=>({type:P(e.type),parameters:e.parameters,fallback:e.fallback,compression:e.compression,content:e.content}),T=e=>({content:N(G(e.content)),convoId:e.convoId,deliveryStatus:e.deliveryStatus,id:e.id,kind:e.kind,senderInboxId:e.senderInboxId,sentAtNs:e.sentAtNs}),B=e=>({contentTypes:e.contentTypes,deliveryStatus:e.deliveryStatus,direction:e.direction,limit:e.limit,sentAfterNs:e.sentAfterNs,sentBeforeNs:e.sentBeforeNs}),R=e=>new a(e.sentBeforeNs,e.sentAfterNs,e.limit,e.deliveryStatus,e.direction,e.contentTypes),L=e=>({consentStates:e.consentStates,createdAfterNs:e.createdAfterNs,createdBeforeNs:e.createdBeforeNs,includeDuplicateDms:e.includeDuplicateDms,limit:e.limit}),E=e=>new o(e.consentStates,e.createdAfterNs,e.createdBeforeNs,e.includeDuplicateDms??!1,e.limit),_=e=>({addAdminPolicy:e.addAdminPolicy,addMemberPolicy:e.addMemberPolicy,removeAdminPolicy:e.removeAdminPolicy,removeMemberPolicy:e.removeMemberPolicy,updateGroupDescriptionPolicy:e.updateGroupDescriptionPolicy,updateGroupImageUrlSquarePolicy:e.updateGroupImageUrlSquarePolicy,updateGroupNamePolicy:e.updateGroupNamePolicy,updateMessageDisappearingPolicy:e.updateMessageDisappearingPolicy}),U=e=>new d(e.addMemberPolicy,e.removeMemberPolicy,e.addAdminPolicy,e.removeAdminPolicy,e.updateGroupNamePolicy,e.updateGroupDescriptionPolicy,e.updateGroupImageUrlSquarePolicy,e.updateMessageDisappearingPolicy),W=e=>({customPermissionPolicySet:e.customPermissionPolicySet,description:e.groupDescription,imageUrlSquare:e.groupImageUrlSquare,messageDisappearingSettings:e.messageDisappearingSettings?X(e.messageDisappearingSettings):void 0,name:e.groupName,permissions:e.permissions}),j=e=>new c(e.permissions,e.name,e.imageUrlSquare,e.description,e.customPermissionPolicySet&&e.permissions===p.CustomPolicy?U(e.customPermissionPolicySet):void 0,e.messageDisappearingSettings?Y(e.messageDisappearingSettings):void 0),F=e=>({messageDisappearingSettings:e.messageDisappearingSettings?X(e.messageDisappearingSettings):void 0}),q=e=>new l(e.messageDisappearingSettings?Y(e.messageDisappearingSettings):void 0),O=async e=>{const t=e.id,s=e.name,i=e.imageUrl,n=e.description,r=e.permissions,a=e.isActive,o=e.addedByInboxId,d=await e.metadata(),c=e.admins,l=e.superAdmins,u=e.createdAtNs,h=r.policyType,g=r.policySet;return{id:t,name:s,imageUrl:i,description:n,permissions:{policyType:h,policySet:{addAdminPolicy:g.addAdminPolicy,addMemberPolicy:g.addMemberPolicy,removeAdminPolicy:g.removeAdminPolicy,removeMemberPolicy:g.removeMemberPolicy,updateGroupDescriptionPolicy:g.updateGroupDescriptionPolicy,updateGroupImageUrlSquarePolicy:g.updateGroupImageUrlSquarePolicy,updateGroupNamePolicy:g.updateGroupNamePolicy,updateMessageDisappearingPolicy:g.updateMessageDisappearingPolicy}},isActive:a,addedByInboxId:o,metadata:d,admins:c,superAdmins:l,createdAtNs:u}},K=e=>({bytes:e.bytes,clientTimestampNs:e.clientTimestampNs,id:e.id}),$=e=>({accountIdentifiers:e.accountIdentifiers,inboxId:e.inboxId,installations:e.installations.map(K),recoveryIdentifier:e.recoveryIdentifier}),H=e=>({entity:e.entity,entityType:e.entityType,state:e.state}),V=e=>new u(e.entityType,e.state,e.entity),z=e=>({accountIdentifiers:e.accountIdentifiers,consentState:e.consentState,inboxId:e.inboxId,installationIds:e.installationIds,permissionLevel:e.permissionLevel}),J=e=>new h(e.inboxId,e.accountIdentifiers,e.installationIds,e.permissionLevel,e.consentState),Q=e=>({key:e.key,epoch:e.epoch}),X=e=>({fromNs:e.fromNs,inNs:e.inNs}),Y=e=>new g(e.fromNs,e.inNs),Z=e=>({lifetime:e.lifetime?{notBefore:e.lifetime.not_before,notAfter:e.lifetime.not_after}:void 0,validationError:e.validationError});class ee{#c;content;contentType;conversationId;deliveryStatus;fallback;compression;id;kind;parameters;encodedContent;senderInboxId;sentAtNs;constructor(e,t){switch(this.#c=e,this.id=t.id,this.sentAtNs=t.sentAtNs,this.conversationId=t.convoId,this.senderInboxId=t.senderInboxId,this.encodedContent=t.content,t.kind){case m.Application:this.kind="application";break;case m.MembershipChange:this.kind="membership_change"}switch(t.deliveryStatus){case y.Unpublished:this.deliveryStatus="unpublished";break;case y.Published:this.deliveryStatus="published";break;case y.Failed:this.deliveryStatus="failed"}this.contentType=P(t.content.type),this.parameters=new Map(Object.entries(t.content.parameters)),this.fallback=t.content.fallback,this.compression=t.content.compression;try{this.content=this.#c.decodeContent(t,this.contentType)}catch{this.content=void 0}}}class te extends Error{constructor(){super("Signer unavailable, use Client.create to create a client with a signer")}}class se extends Error{constructor(e){super(`Codec not found for "${e.toString()}" content type`)}}class ie extends Error{constructor(){super("Unable to create add account signature text, `allowInboxReassign` must be true")}}class ne extends Error{constructor(e){super(`Account already associated with inbox ${e}`)}}class re extends Error{constructor(e){let t="";switch(e){case I.AddWallet:t="add account";break;case I.CreateInbox:t="create inbox";break;case I.RevokeWallet:t="remove account";break;case I.RevokeInstallations:t="revoke installations";break;case I.ChangeRecoveryIdentifier:t="change recovery identifier"}super(`Failed to generate ${t} signature text`)}}class ae extends Error{constructor(e){super(`Invalid group membership change for message ${e}`)}}class oe extends Error{constructor(){super("Content type is required when sending content other than text")}}class de{#l;#c;#u;#h;#g;#p;constructor(e,t,s){this.#c=e,this.#h=t,this.#m(s)}#m(e){this.#g=e?.isActive??void 0,this.#l=e?.addedByInboxId??"",this.#p=e?.metadata??void 0,this.#u=e?.createdAtNs??void 0}get id(){return this.#h}get isActive(){return this.#g}get addedByInboxId(){return this.#l}get createdAtNs(){return this.#u}get createdAt(){return this.#u?(e=this.#u,new Date(Number(e/1000000n))):void 0;var e}get metadata(){return this.#p}async members(){return this.#c.sendMessage("getGroupMembers",{id:this.#h})}async sync(){const e=await this.#c.sendMessage("syncGroup",{id:this.#h});return this.#m(e),e}async publishMessages(){return this.#c.sendMessage("publishGroupMessages",{id:this.#h})}async sendOptimistic(e,t){if("string"!=typeof e&&!t)throw new oe;const i="string"==typeof e?this.#c.encodeContent(e,t??s):this.#c.encodeContent(e,t);return this.#c.sendMessage("sendOptimisticGroupMessage",{id:this.#h,content:i})}async send(e,t){if("string"!=typeof e&&!t)throw new oe;const i="string"==typeof e?this.#c.encodeContent(e,t??s):this.#c.encodeContent(e,t);return this.#c.sendMessage("sendGroupMessage",{id:this.#h,content:i})}async messages(e){return(await this.#c.sendMessage("getGroupMessages",{id:this.#h,options:e})).map((e=>new ee(this.#c,e)))}async consentState(){return this.#c.sendMessage("getGroupConsentState",{id:this.#h})}async updateConsentState(e){return this.#c.sendMessage("updateGroupConsentState",{id:this.#h,state:e})}async messageDisappearingSettings(){return this.#c.sendMessage("getGroupMessageDisappearingSettings",{id:this.#h})}async updateMessageDisappearingSettings(e,t){return this.#c.sendMessage("updateGroupMessageDisappearingSettings",{id:this.#h,fromNs:e,inNs:t})}async removeMessageDisappearingSettings(){return this.#c.sendMessage("removeGroupMessageDisappearingSettings",{id:this.#h})}async isMessageDisappearingEnabled(){return this.#c.sendMessage("isGroupMessageDisappearingEnabled",{id:this.#h})}async stream(e){const t=w(),s=new S,i=this.#c.handleStreamMessage(t,((t,i)=>{let n,r=t;if(i)try{n=new ee(this.#c,i)}catch(t){r=t}s.callback(r,n),e?.(r,n)}));return await this.#c.sendMessage("streamGroupMessages",{groupId:this.#h,streamId:t}),s.onReturn=()=>{this.#c.sendMessage("endStream",{streamId:t}),i()},s}async pausedForVersion(){return this.#c.sendMessage("getGroupPausedForVersion",{id:this.#h})}async getHmacKeys(){return this.#c.sendMessage("getGroupHmacKeys",{id:this.#h})}}class ce extends de{#c;#h;constructor(e,t,s){super(e,t,s),this.#c=e,this.#h=t}async peerInboxId(){return this.#c.sendMessage("getDmPeerInboxId",{id:this.#h})}}class le extends de{#y=[];#c;#I;#h;#v;#w;#M=[];#m(e){this.#w=e?.name??"",this.#v=e?.imageUrl??"",this.#I=e?.description??"",this.#y=e?.admins??[],this.#M=e?.superAdmins??[]}constructor(e,t,s){super(e,t,s),this.#c=e,this.#h=t,this.#m(s)}async sync(){const e=await super.sync();return this.#m(e),e}get name(){return this.#w}async updateName(e){await this.#c.sendMessage("updateGroupName",{id:this.#h,name:e}),this.#w=e}get imageUrl(){return this.#v}async updateImageUrl(e){await this.#c.sendMessage("updateGroupImageUrlSquare",{id:this.#h,imageUrl:e}),this.#v=e}get description(){return this.#I}async updateDescription(e){await this.#c.sendMessage("updateGroupDescription",{id:this.#h,description:e}),this.#I=e}get admins(){return this.#y}get superAdmins(){return this.#M}async listAdmins(){const e=await this.#c.sendMessage("getGroupAdmins",{id:this.#h});return this.#y=e,e}async listSuperAdmins(){const e=await this.#c.sendMessage("getGroupSuperAdmins",{id:this.#h});return this.#M=e,e}async permissions(){return this.#c.sendMessage("getGroupPermissions",{id:this.#h})}async updatePermission(e,t,s){return this.#c.sendMessage("updateGroupPermissionPolicy",{id:this.#h,permissionType:e,policy:t,metadataField:s})}async isAdmin(e){return(await this.listAdmins()).includes(e)}async isSuperAdmin(e){return(await this.listSuperAdmins()).includes(e)}async addMembersByIdentifiers(e){return this.#c.sendMessage("addGroupMembers",{id:this.#h,identifiers:e})}async addMembers(e){return this.#c.sendMessage("addGroupMembersByInboxId",{id:this.#h,inboxIds:e})}async removeMembersByIdentifiers(e){return this.#c.sendMessage("removeGroupMembers",{id:this.#h,identifiers:e})}async removeMembers(e){return this.#c.sendMessage("removeGroupMembersByInboxId",{id:this.#h,inboxIds:e})}async addAdmin(e){return this.#c.sendMessage("addGroupAdmin",{id:this.#h,inboxId:e})}async removeAdmin(e){return this.#c.sendMessage("removeGroupAdmin",{id:this.#h,inboxId:e})}async addSuperAdmin(e){return this.#c.sendMessage("addGroupSuperAdmin",{id:this.#h,inboxId:e})}async removeSuperAdmin(e){return this.#c.sendMessage("removeGroupSuperAdmin",{id:this.#h,inboxId:e})}}class ue{#c;constructor(e){this.#c=e}async sync(){return this.#c.sendMessage("syncConversations",void 0)}async syncAll(e){return this.#c.sendMessage("syncAllConversations",{consentStates:e})}async getConversationById(e){const t=await this.#c.sendMessage("getConversationById",{id:e});if(t)return"group"===t.metadata.conversationType?new le(this.#c,t.id,t):new ce(this.#c,t.id,t)}async getMessageById(e){const t=await this.#c.sendMessage("getMessageById",{id:e});return t?new ee(this.#c,t):void 0}async getDmByInboxId(e){const t=await this.#c.sendMessage("getDmByInboxId",{inboxId:e});return t?new ce(this.#c,t.id,t):void 0}async list(e){return(await this.#c.sendMessage("getConversations",{options:e})).map((e=>{switch(e.metadata.conversationType){case"dm":return new ce(this.#c,e.id,e);case"group":return new le(this.#c,e.id,e);default:return}})).filter((e=>void 0!==e))}async listGroups(e){return(await this.#c.sendMessage("getGroups",{options:e})).map((e=>new le(this.#c,e.id,e)))}async listDms(e){return(await this.#c.sendMessage("getDms",{options:e})).map((e=>new ce(this.#c,e.id,e)))}async newGroupWithIdentifiers(e,t){const s=await this.#c.sendMessage("newGroupWithIdentifiers",{identifiers:e,options:t});return new le(this.#c,s.id,s)}async newGroup(e,t){const s=await this.#c.sendMessage("newGroupWithInboxIds",{inboxIds:e,options:t});return new le(this.#c,s.id,s)}async newDmWithIdentifier(e,t){const s=await this.#c.sendMessage("newDmWithIdentifier",{identifier:e,options:t});return new ce(this.#c,s.id,s)}async newDm(e,t){const s=await this.#c.sendMessage("newDmWithInboxId",{inboxId:e,options:t});return new ce(this.#c,s.id,s)}async getHmacKeys(){return this.#c.sendMessage("getHmacKeys",void 0)}async stream(e,t){const s=w(),i=new S,n=this.#c.handleStreamMessage(s,((t,s)=>{let n,r=t;if(s)try{n="group"===s.metadata.conversationType?new le(this.#c,s.id,s):new ce(this.#c,s.id,s)}catch(t){r=t}i.callback(r,n),e?.(r,n)}));return await this.#c.sendMessage("streamAllGroups",{streamId:s,conversationType:t}),i.onReturn=()=>{this.#c.sendMessage("endStream",{streamId:s}),n()},i}async streamGroups(e){return this.stream(e,v.Group)}async streamDms(e){return this.stream(e,v.Dm)}async streamAllMessages(e,t){const s=w(),i=new S,n=this.#c.handleStreamMessage(s,((t,s)=>{let n,r=t;if(s)try{n=new ee(this.#c,s)}catch(t){r=t}i.callback(r,n),e?.(r,n)}));return await this.#c.sendMessage("streamAllMessages",{streamId:s,conversationType:t}),i.onReturn=()=>{this.#c.sendMessage("endStream",{streamId:s}),n()},i}async streamAllGroupMessages(e){return this.streamAllMessages(e,v.Group)}async streamAllDmMessages(e){return this.streamAllMessages(e,v.Dm)}}class he{#c;constructor(e){this.#c=e}async inboxState(e){return this.#c.sendMessage("inboxState",{refreshFromNetwork:e??!1})}async inboxStateFromInboxIds(e,t){return this.#c.sendMessage("inboxStateFromInboxIds",{inboxIds:e,refreshFromNetwork:t??!1})}async getLatestInboxState(e){return this.#c.sendMessage("getLatestInboxState",{inboxId:e})}async setConsentStates(e){return this.#c.sendMessage("setConsentStates",{records:e})}async getConsentState(e,t){return this.#c.sendMessage("getConsentState",{entityType:e,entity:t})}async streamConsent(e){const t=w(),s=new S,i=this.#c.handleStreamMessage(t,((t,i)=>{s.callback(t,i??void 0),e?.(t,i??void 0)}));return await this.#c.sendMessage("streamConsent",{streamId:t}),s.onReturn=()=>{this.#c.sendMessage("endStream",{streamId:t}),i()},s}async streamPreferences(e){const t=w(),s=new S,i=this.#c.handleStreamMessage(t,((t,i)=>{s.callback(t,i??void 0),e?.(t,i??void 0)}));return await this.#c.sendMessage("streamPreferences",{streamId:t}),s.onReturn=()=>{this.#c.sendMessage("endStream",{streamId:t}),i()},s}}const ge=e=>{console.error(`Worker error on line ${e.lineno} in "${e.filename}"`),console.error(e.message)};class pe{#e;#t;#s=new Map;constructor(e,t){this.#e=e,this.#e.addEventListener("message",this.handleMessage),this.#e.addEventListener("error",ge),this.#t=t,this.init(t)}async init(e){return this.sendMessage("init",{enableLogging:e})}sendMessage(e,t){const s=w();this.#e.postMessage({action:e,id:s,data:t});return new Promise(((e,t)=>{this.#s.set(s,{resolve:e,reject:t})}))}handleMessage=e=>{const t=e.data;this.#t&&console.log("utils received event data",t);const s=this.#s.get(t.id);s&&(this.#s.delete(t.id),"error"in t?s.reject(t.error):s.resolve(t.result))};close(){this.#e.removeEventListener("message",this.handleMessage),this.#e.removeEventListener("error",ge),this.#e.terminate()}}class me extends pe{constructor(e){super(new Worker(new URL("./workers/utils",import.meta.url),{type:"module"}),e??!1)}async generateInboxId(e){return this.sendMessage("generateInboxId",{identifier:e})}async getInboxIdForIdentifier(e,t){return this.sendMessage("getInboxIdForIdentifier",{identifier:e,env:t})}}class ye extends b{#f;#b;#S;#x;#A;#k;#P=!1;#G;#D;#N;constructor(t){super(new Worker(new URL("./workers/client",import.meta.url),{type:"module"}),void 0!==t?.loggingLevel&&"off"!==t.loggingLevel),this.#N=t,this.#b=new ue(this),this.#G=new he(this);const s=[new e,new i,...t?.codecs??[]];this.#f=new Map(s.map((e=>[e.contentType.toString(),e])))}async init(e){const t=await this.sendMessage("init",{identifier:e,options:this.#N});this.#S=e,this.#x=t.inboxId,this.#A=t.installationId,this.#k=t.installationIdBytes,this.#P=!0}static async create(e,t){const s=new ye(t);return s.#D=e,await s.init(await e.getIdentifier()),t?.disableAutoRegister||await s.register(),s}static async build(e,t){const s=new ye({...t,disableAutoRegister:!0});return await s.init(e),s}get options(){return this.#N}get signer(){return this.#D}get isReady(){return this.#P}get inboxId(){return this.#x}get accountIdentifier(){return this.#S}get installationId(){return this.#A}get installationIdBytes(){return this.#k}get conversations(){return this.#b}get preferences(){return this.#G}async unsafe_createInboxSignatureText(){return this.sendMessage("createInboxSignatureText",void 0)}async unsafe_addAccountSignatureText(e,t=!1){if(!t)throw new ie;return this.sendMessage("addAccountSignatureText",{newIdentifier:e})}async unsafe_removeAccountSignatureText(e){return this.sendMessage("removeAccountSignatureText",{identifier:e})}async unsafe_revokeAllOtherInstallationsSignatureText(){return this.sendMessage("revokeAllOtherInstallationsSignatureText",void 0)}async unsafe_revokeInstallationsSignatureText(e){return this.sendMessage("revokeInstallationsSignatureText",{installationIds:e})}async unsafe_changeRecoveryIdentifierSignatureText(e){return this.sendMessage("changeRecoveryIdentifierSignatureText",{identifier:e})}async unsafe_addSignature(e,t,s){const i=await s.signMessage(t);switch(s.type){case"SCW":await this.sendMessage("addScwSignature",{type:e,bytes:i,chainId:s.getChainId(),blockNumber:s.getBlockNumber?.()});break;case"EOA":await this.sendMessage("addEcdsaSignature",{type:e,bytes:i})}}async unsafe_applySignatures(){return this.sendMessage("applySignatures",void 0)}async register(){if(!this.#D)throw new te;const e=await this.unsafe_createInboxSignatureText();if(e)return await this.unsafe_addSignature(I.CreateInbox,e,this.#D),this.sendMessage("registerIdentity",void 0)}async unsafe_addAccount(e,t=!1){const s=await this.findInboxIdByIdentifier(await e.getIdentifier());if(s&&!t)throw new ne(s);const i=await this.unsafe_addAccountSignatureText(await e.getIdentifier(),!0);if(!i)throw new re(I.AddWallet);await this.unsafe_addSignature(I.AddWallet,i,e),await this.unsafe_applySignatures()}async removeAccount(e){if(!this.#D)throw new te;const t=await this.unsafe_removeAccountSignatureText(e);if(!t)throw new re(I.RevokeWallet);await this.unsafe_addSignature(I.RevokeWallet,t,this.#D),await this.unsafe_applySignatures()}async revokeAllOtherInstallations(){if(!this.#D)throw new te;const e=await this.unsafe_revokeAllOtherInstallationsSignatureText();if(!e)throw new re(I.RevokeInstallations);await this.unsafe_addSignature(I.RevokeInstallations,e,this.#D),await this.unsafe_applySignatures()}async revokeInstallations(e){if(!this.#D)throw new te;const t=await this.unsafe_revokeInstallationsSignatureText(e);if(!t)throw new re(I.RevokeInstallations);await this.unsafe_addSignature(I.RevokeInstallations,t,this.#D),await this.unsafe_applySignatures()}async changeRecoveryIdentifier(e){if(!this.#D)throw new te;const t=await this.unsafe_changeRecoveryIdentifierSignatureText(e);if(!t)throw new re(I.ChangeRecoveryIdentifier);await this.unsafe_addSignature(I.ChangeRecoveryIdentifier,t,this.#D),await this.unsafe_applySignatures()}async isRegistered(){return this.sendMessage("isRegistered",void 0)}async canMessage(e){return this.sendMessage("canMessage",{identifiers:e})}static async canMessage(e,t){const s=new Map,i=new me;for(const n of e){const e=await i.getInboxIdForIdentifier(n,t);s.set(n.identifier.toLowerCase(),void 0!==e)}return i.close(),s}async findInboxIdByIdentifier(e){return this.sendMessage("findInboxIdByIdentifier",{identifier:e})}codecFor(e){return this.#f.get(e.toString())}encodeContent(e,t){const s=this.codecFor(t);if(!s)throw new se(t);const i=s.encode(e,this),n=s.fallback(e);return n&&(i.fallback=n),N(i)}decodeContent(e,s){const i=this.codecFor(s);if(!i)throw new se(s);if(s.sameAs(t)&&e.kind!==m.MembershipChange)throw new ae(e.id);const n=C(e.content);return i.decode(n,this)}signWithInstallationKey(e){return this.sendMessage("signWithInstallationKey",{signatureText:e})}verifySignedWithInstallationKey(e,t){return this.sendMessage("verifySignedWithInstallationKey",{signatureText:e,signatureBytes:t})}verifySignedWithPublicKey(e,t,s){return this.sendMessage("verifySignedWithPublicKey",{signatureText:e,signatureBytes:t,publicKey:s})}async getKeyPackageStatusesForInstallationIds(e){return this.sendMessage("getKeyPackageStatusesForInstallationIds",{installationIds:e})}}const Ie={local:"http://localhost:5555",dev:"https://dev.xmtp.network",production:"https://production.xmtp.network"},ve={local:"http://localhost:5558",dev:"https://message-history.dev.ephemera.network",production:"https://message-history.production.ephemera.network"};export{Ie as ApiUrls,ye as Client,de as Conversation,ue as Conversations,ee as DecodedMessage,ce as Dm,le as Group,ve as HistorySyncUrls,me as Utils,A as fromContentTypeId,D as fromEncodedContent,V as fromSafeConsent,P as fromSafeContentTypeId,q as fromSafeCreateDmOptions,j as fromSafeCreateGroupOptions,C as fromSafeEncodedContent,J as fromSafeGroupMember,E as fromSafeListConversationsOptions,R as fromSafeListMessagesOptions,Y as fromSafeMessageDisappearingSettings,U as fromSafePermissionPolicySet,x as toContentTypeId,G as toEncodedContent,H as toSafeConsent,k as toSafeContentTypeId,O as toSafeConversation,F as toSafeCreateDmOptions,W as toSafeCreateGroupOptions,N as toSafeEncodedContent,z as toSafeGroupMember,Q as toSafeHmacKey,$ as toSafeInboxState,K as toSafeInstallation,Z as toSafeKeyPackageStatus,L as toSafeListConversationsOptions,B as toSafeListMessagesOptions,T as toSafeMessage,X as toSafeMessageDisappearingSettings,_ as toSafePermissionPolicySet};
//# sourceMappingURL=index.js.map
