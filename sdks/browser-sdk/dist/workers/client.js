import e,{EncodedContent as t,ContentTypeId as s,ListMessagesOptions as i,ListConversationsOptions as n,CreateGroupOptions as r,CreateDMOptions as a,Consent as o,PermissionPolicySet as c,GroupPermissionsOptions as d,MessageDisappearingSettings as u,getInboxIdForIdentifier as p,generateInboxId as l,createClient as m,LogOptions as g,ConversationType as y,verifySignedWithPublicKey as I}from"@xmtp/wasm-bindings";import{ContentTypeId as v}from"@xmtp/content-type-primitives";const b=e=>{return new t((i=e.type,new s(i.authorityId,i.typeId,i.versionMajor,i.versionMinor)),new Map(Object.entries(e.parameters)),e.fallback,e.compression,e.content);var i},h=e=>{return{type:(t=e.type,{authorityId:t.authorityId,typeId:t.typeId,versionMajor:t.versionMajor,versionMinor:t.versionMinor}),parameters:e.parameters,fallback:e.fallback,compression:e.compression,content:e.content};var t},w=e=>{return{type:(t=e.type,new v({authorityId:t.authorityId,typeId:t.typeId,versionMajor:t.versionMajor,versionMinor:t.versionMinor})),parameters:e.parameters,fallback:e.fallback,compression:e.compression,content:e.content};var t},S=e=>{return{content:h((t=e.content,{type:(s=t.type,new v({authorityId:s.authorityId,typeId:s.typeId,versionMajor:s.versionMajor,versionMinor:s.versionMinor})),parameters:Object.fromEntries(t.parameters),fallback:t.fallback,compression:t.compression,content:t.content})),convoId:e.convoId,deliveryStatus:e.deliveryStatus,id:e.id,kind:e.kind,senderInboxId:e.senderInboxId,sentAtNs:e.sentAtNs};var t,s},f=e=>new n(e.consentStates,e.createdAfterNs,e.createdBeforeNs,e.includeDuplicateDms??!1,e.limit),k=e=>{return new r(e.permissions,e.name,e.imageUrlSquare,e.description,e.customPermissionPolicySet&&e.permissions===d.CustomPolicy?(t=e.customPermissionPolicySet,new c(t.addMemberPolicy,t.removeMemberPolicy,t.addAdminPolicy,t.removeAdminPolicy,t.updateGroupNamePolicy,t.updateGroupDescriptionPolicy,t.updateGroupImageUrlSquarePolicy,t.updateMessageDisappearingPolicy)):void 0,e.messageDisappearingSettings?B(e.messageDisappearingSettings):void 0);var t},x=e=>new a(e.messageDisappearingSettings?B(e.messageDisappearingSettings):void 0),M=async e=>{const t=e.id,s=e.name,i=e.imageUrl,n=e.description,r=e.permissions,a=e.isActive,o=e.addedByInboxId,c=await e.metadata(),d=e.admins,u=e.superAdmins,p=e.createdAtNs,l=r.policyType,m=r.policySet;return{id:t,name:s,imageUrl:i,description:n,permissions:{policyType:l,policySet:{addAdminPolicy:m.addAdminPolicy,addMemberPolicy:m.addMemberPolicy,removeAdminPolicy:m.removeAdminPolicy,removeMemberPolicy:m.removeMemberPolicy,updateGroupDescriptionPolicy:m.updateGroupDescriptionPolicy,updateGroupImageUrlSquarePolicy:m.updateGroupImageUrlSquarePolicy,updateGroupNamePolicy:m.updateGroupNamePolicy,updateMessageDisappearingPolicy:m.updateMessageDisappearingPolicy}},isActive:a,addedByInboxId:o,metadata:c,admins:d,superAdmins:u,createdAtNs:p}},A=e=>({bytes:e.bytes,clientTimestampNs:e.clientTimestampNs,id:e.id}),G=e=>({accountIdentifiers:e.accountIdentifiers,inboxId:e.inboxId,installations:e.installations.map(A),recoveryIdentifier:e.recoveryIdentifier}),P=e=>({entity:e.entity,entityType:e.entityType,state:e.state}),D=e=>new o(e.entityType,e.state,e.entity),T=e=>({key:e.key,epoch:e.epoch}),B=e=>new u(e.fromNs,e.inNs),N=e=>({lifetime:e.lifetime?{notBefore:e.lifetime.not_before,notAfter:e.lifetime.not_after}:void 0,validationError:e.validationError});class C extends Error{constructor(){super("Client not initialized")}}class K extends Error{constructor(e){super(`Group "${e}" not found`)}}class W extends Error{constructor(e){super(`Stream "${e}" not found`)}}const E={local:"http://localhost:5555",dev:"https://dev.xmtp.network",production:"https://production.xmtp.network"},L={local:"http://localhost:5558",dev:"https://message-history.dev.ephemera.network",production:"https://message-history.production.ephemera.network"};class F{#e;#t;constructor(e,t){this.#e=e,this.#t=t}get id(){return this.#t.id()}get name(){return this.#t.groupName()}async updateName(e){return this.#t.updateGroupName(e)}get imageUrl(){return this.#t.groupImageUrlSquare()}async updateImageUrl(e){return this.#t.updateGroupImageUrlSquare(e)}get description(){return this.#t.groupDescription()}async updateDescription(e){return this.#t.updateGroupDescription(e)}get isActive(){return this.#t.isActive()}get addedByInboxId(){return this.#t.addedByInboxId()}get createdAtNs(){return this.#t.createdAtNs()}async metadata(){const e=await this.#t.groupMetadata();return{creatorInboxId:e.creatorInboxId(),conversationType:e.conversationType()}}async members(){return(await this.#t.listMembers()).map((e=>(e=>({accountIdentifiers:e.accountIdentifiers,consentState:e.consentState,inboxId:e.inboxId,installationIds:e.installationIds,permissionLevel:e.permissionLevel}))(e)))}get admins(){return this.#t.adminList()}get superAdmins(){return this.#t.superAdminList()}get permissions(){const e=this.#t.groupPermissions();return{policyType:e.policyType(),policySet:e.policySet()}}async updatePermission(e,t,s){return this.#t.updatePermissionPolicy(e,t,s)}isAdmin(e){return this.#t.isAdmin(e)}isSuperAdmin(e){return this.#t.isSuperAdmin(e)}async sync(){return this.#t.sync()}async addMembersByIdentifiers(e){return this.#t.addMembers(e)}async addMembers(e){return this.#t.addMembersByInboxId(e)}async removeMembersByIdentifiers(e){return this.#t.removeMembers(e)}async removeMembers(e){return this.#t.removeMembersByInboxId(e)}async addAdmin(e){return this.#t.addAdmin(e)}async removeAdmin(e){return this.#t.removeAdmin(e)}async addSuperAdmin(e){return this.#t.addSuperAdmin(e)}async removeSuperAdmin(e){return this.#t.removeSuperAdmin(e)}async publishMessages(){return this.#t.publishMessages()}sendOptimistic(e){return this.#t.sendOptimistic(e)}async send(e){return this.#t.send(e)}async messages(e){return this.#t.findMessages(e?(e=>new i(e.sentBeforeNs,e.sentAfterNs,e.limit,e.deliveryStatus,e.direction,e.contentTypes))(e):void 0)}get consentState(){return this.#t.consentState()}updateConsentState(e){this.#t.updateConsentState(e)}dmPeerInboxId(){return this.#t.dmPeerInboxId()}messageDisappearingSettings(){return this.#t.messageDisappearingSettings()}async updateMessageDisappearingSettings(e,t){const s=new u(e,t);return this.#t.updateMessageDisappearingSettings(s)}async removeMessageDisappearingSettings(){return this.#t.removeMessageDisappearingSettings()}isMessageDisappearingEnabled(){return this.#t.isMessageDisappearingEnabled()}stream(e){return this.#t.stream({on_message:t=>{e?.(null,t)},on_error:t=>{e?.(t,void 0)}})}pausedForVersion(){return this.#t.pausedForVersion()}getHmacKeys(){return this.#t.getHmacKeys()}}class U{#e;#s;constructor(e,t){this.#e=e,this.#s=t}async sync(){return this.#s.sync()}async syncAll(e){return this.#s.syncAllConversations(e)}getConversationById(e){try{const t=this.#s.findGroupById(e);return new F(this.#e,t)}catch{return}}getMessageById(e){try{return this.#s.findMessageById(e)}catch{return}}getDmByInboxId(e){try{const t=this.#s.findDmByTargetInboxId(e);return new F(this.#e,t)}catch{return}}list(e){return this.#s.list(e?f(e):void 0).map((e=>new F(this.#e,e.conversation)))}listGroups(e){return this.#s.listGroups(e?f(e):void 0).map((e=>new F(this.#e,e.conversation)))}listDms(e){return this.#s.listDms(e?f(e):void 0).map((e=>new F(this.#e,e.conversation)))}async newGroupWithIdentifiers(e,t){const s=await this.#s.createGroup(e,t?k(t):void 0);return new F(this.#e,s)}async newGroup(e,t){const s=await this.#s.createGroupByInboxIds(e,t?k(t):void 0);return new F(this.#e,s)}async newDmWithIdentifier(e,t){const s=await this.#s.createDm(e,t?x(t):void 0);return new F(this.#e,s)}async newDm(e,t){const s=await this.#s.createDmByInboxId(e,t?x(t):void 0);return new F(this.#e,s)}getHmacKeys(){return this.#s.getHmacKeys()}stream(e,t){return this.#s.stream({on_conversation:t=>{e?.(null,t)},on_error:t=>{e?.(t,void 0)}},t)}streamGroups(e){return this.#s.stream(e,y.Group)}streamDms(e){return this.#s.stream(e,y.Dm)}streamAllMessages(e,t){return this.#s.streamAllMessages({on_message:t=>{e?.(null,t)},on_error:t=>{e?.(t,void 0)}},t)}}class _{#e;#s;constructor(e,t){this.#e=e,this.#s=t}async inboxState(e){return this.#e.inboxState(e)}async inboxStateFromInboxIds(e,t){return this.#e.inboxStateFromInboxIds(e,t??!1)}async getLatestInboxState(e){return this.#e.getLatestInboxState(e)}async setConsentStates(e){return this.#e.setConsentStates(e.map(D))}async getConsentState(e,t){return this.#e.getConsentState(e,t)}streamConsent(e){return this.#s.streamConsent({on_consent_update:t=>{e?.(null,t)},on_error:t=>{e?.(t,void 0)}})}streamPreferences(e){return this.#s.streamPreferences({on_user_preference_update:t=>{e?.(null,t)},on_error:t=>{e?.(t,void 0)}})}}class O{#e;#s;#i;constructor(e){this.#e=e;const t=e.conversations();this.#s=new U(this,t),this.#i=new _(e,t)}static async create(e,t){const s=await(async(e,t)=>{const s=t?.apiUrl||E[t?.env||"dev"],i=await p(s,e)||l(e),n=void 0===t?.dbPath?`xmtp-${t?.env||"dev"}-${i}.db3`:t.dbPath,r=t&&(void 0!==t.loggingLevel||t.structuredLogging||t.performanceLogging),a=t?.historySyncUrl||L[t?.env||"dev"];return m(s,i,e,n,t?.dbEncryptionKey,a,r?new g(t.structuredLogging??!1,t.performanceLogging??!1,t.loggingLevel):void 0)})(e,t);return new O(s)}get accountIdentifier(){return this.#e.accountIdentifier}get inboxId(){return this.#e.inboxId}get installationId(){return this.#e.installationId}get installationIdBytes(){return this.#e.installationIdBytes}get isRegistered(){return this.#e.isRegistered}get conversations(){return this.#s}get preferences(){return this.#i}createInboxSignatureText(){try{return this.#e.createInboxSignatureText()}catch{return}}async addAccountSignatureText(e){try{return await this.#e.addWalletSignatureText(e)}catch{return}}async removeAccountSignatureText(e){try{return await this.#e.revokeWalletSignatureText(e)}catch{return}}async revokeAllAOtherInstallationsSignatureText(){try{return await this.#e.revokeAllOtherInstallationsSignatureText()}catch{return}}async revokeInstallationsSignatureText(e){try{return await this.#e.revokeInstallationsSignatureText(e)}catch{return}}async changeRecoveryIdentifierSignatureText(e){try{return await this.#e.changeRecoveryIdentifierSignatureText(e)}catch{return}}async addEcdsaSignature(e,t){return this.#e.addEcdsaSignature(e,t)}async addScwSignature(e,t,s,i){return this.#e.addScwSignature(e,t,s,i)}async applySignatures(){return this.#e.applySignatureRequests()}async canMessage(e){return this.#e.canMessage(e)}async registerIdentity(){return this.#e.registerIdentity()}async findInboxIdByIdentifier(e){return this.#e.findInboxIdByIdentifier(e)}signWithInstallationKey(e){return this.#e.signWithInstallationKey(e)}verifySignedWithInstallationKey(e,t){try{return this.#e.verifySignedWithInstallationKey(e,t),!0}catch{return!1}}verifySignedWithPublicKey(e,t,s){try{return I(e,t,s),!0}catch{return!1}}async getKeyPackageStatusesForInstallationIds(e){return this.#e.getKeyPackageStatusesForInstallationIds(e)}}let j,R=!1;const q=new Map,H=e=>{self.postMessage(e)},V=e=>{self.postMessage(e)},$=e=>{self.postMessage(e)};self.onmessage=async t=>{const{action:s,id:i,data:n}=t.data;R&&console.log("client worker received event data",t.data),await e();try{if("init"===s&&!j)return j=await O.create(n.identifier,n.options),R=void 0!==n.options?.loggingLevel&&"off"!==n.options.loggingLevel,void H({id:i,action:s,result:{inboxId:j.inboxId,installationId:j.installationId,installationIdBytes:j.installationIdBytes}});if(!j)throw new C;const e=j,t=t=>{const s=e.conversations.getConversationById(t);if(!s)throw new K(t);return s};switch(s){case"endStream":{const e=q.get(n.streamId);if(!e)throw new W(n.streamId);e.end(),q.delete(n.streamId),H({id:i,action:s,result:void 0});break}case"createInboxSignatureText":{const t=e.createInboxSignatureText();H({id:i,action:s,result:t});break}case"addAccountSignatureText":{const t=await e.addAccountSignatureText(n.newIdentifier);H({id:i,action:s,result:t});break}case"removeAccountSignatureText":{const t=await e.removeAccountSignatureText(n.identifier);H({id:i,action:s,result:t});break}case"revokeAllOtherInstallationsSignatureText":{const t=await e.revokeAllAOtherInstallationsSignatureText();H({id:i,action:s,result:t});break}case"revokeInstallationsSignatureText":{const t=await e.revokeInstallationsSignatureText(n.installationIds);H({id:i,action:s,result:t});break}case"changeRecoveryIdentifierSignatureText":{const t=await e.changeRecoveryIdentifierSignatureText(n.identifier);H({id:i,action:s,result:t});break}case"addEcdsaSignature":await e.addEcdsaSignature(n.type,n.bytes),H({id:i,action:s,result:void 0});break;case"addScwSignature":await e.addScwSignature(n.type,n.bytes,n.chainId,n.blockNumber),H({id:i,action:s,result:void 0});break;case"applySignatures":await e.applySignatures(),H({id:i,action:s,result:void 0});break;case"registerIdentity":await e.registerIdentity(),H({id:i,action:s,result:void 0});break;case"isRegistered":{const t=e.isRegistered;H({id:i,action:s,result:t});break}case"canMessage":{const t=await e.canMessage(n.identifiers);H({id:i,action:s,result:t});break}case"inboxState":{const t=await e.preferences.inboxState(n.refreshFromNetwork),r=G(t);H({id:i,action:s,result:r});break}case"inboxStateFromInboxIds":{const t=(await e.preferences.inboxStateFromInboxIds(n.inboxIds,n.refreshFromNetwork)).map(G);H({id:i,action:s,result:t});break}case"getLatestInboxState":{const t=await e.preferences.getLatestInboxState(n.inboxId),r=G(t);H({id:i,action:s,result:r});break}case"setConsentStates":await e.preferences.setConsentStates(n.records),H({id:i,action:s,result:void 0});break;case"getConsentState":{const t=await e.preferences.getConsentState(n.entityType,n.entity);H({id:i,action:s,result:t});break}case"findInboxIdByIdentifier":{const t=await e.findInboxIdByIdentifier(n.identifier);H({id:i,action:s,result:t});break}case"signWithInstallationKey":{const t=e.signWithInstallationKey(n.signatureText);H({id:i,action:s,result:t});break}case"verifySignedWithInstallationKey":{const t=e.verifySignedWithInstallationKey(n.signatureText,n.signatureBytes);H({id:i,action:s,result:t});break}case"verifySignedWithPublicKey":{const t=e.verifySignedWithPublicKey(n.signatureText,n.signatureBytes,n.publicKey);H({id:i,action:s,result:t});break}case"getKeyPackageStatusesForInstallationIds":{const t=await e.getKeyPackageStatusesForInstallationIds(n.installationIds),r=new Map(Array.from(t.entries()).map((([e,t])=>[e,N(t)])));H({id:i,action:s,result:r});break}case"streamAllGroups":{const t=async(t,s)=>{t?$({type:"group",streamId:n.streamId,error:t}):V({type:"group",streamId:n.streamId,result:s?await M(new F(e,s)):void 0})},r=e.conversations.stream(t,n.conversationType);q.set(n.streamId,r),H({id:i,action:s,result:void 0});break}case"streamAllMessages":{const t=(e,t)=>{e?$({type:"message",streamId:n.streamId,error:e}):V({type:"message",streamId:n.streamId,result:t?S(t):void 0})},r=e.conversations.streamAllMessages(t,n.conversationType);q.set(n.streamId,r),H({id:i,action:s,result:void 0});break}case"streamConsent":{const t=(e,t)=>{e?$({type:"consent",streamId:n.streamId,error:e}):V({type:"consent",streamId:n.streamId,result:t?.map(P)??[]})},r=e.preferences.streamConsent(t);q.set(n.streamId,r),H({id:i,action:s,result:void 0});break}case"streamPreferences":{const t=(e,t)=>{e?$({type:"preferences",streamId:n.streamId,error:e}):V({type:"preferences",streamId:n.streamId,result:t??void 0})},r=e.preferences.streamPreferences(t);q.set(n.streamId,r),H({id:i,action:s,result:void 0});break}case"getConversations":{const t=e.conversations.list(n.options),r=await Promise.all(t.map((e=>M(e))));H({id:i,action:s,result:r});break}case"getGroups":{const t=e.conversations.listGroups(n.options),r=await Promise.all(t.map((e=>M(e))));H({id:i,action:s,result:r});break}case"getDms":{const t=e.conversations.listDms(n.options),r=await Promise.all(t.map((e=>M(e))));H({id:i,action:s,result:r});break}case"newGroupWithIdentifiers":{const t=await e.conversations.newGroupWithIdentifiers(n.identifiers,n.options),r=await M(t);H({id:i,action:s,result:r});break}case"newGroupWithInboxIds":{const t=await e.conversations.newGroup(n.inboxIds,n.options),r=await M(t);H({id:i,action:s,result:r});break}case"newDmWithIdentifier":{const t=await e.conversations.newDmWithIdentifier(n.identifier,n.options),r=await M(t);H({id:i,action:s,result:r});break}case"newDmWithInboxId":{const t=await e.conversations.newDm(n.inboxId,n.options),r=await M(t);H({id:i,action:s,result:r});break}case"syncConversations":await e.conversations.sync(),H({id:i,action:s,result:void 0});break;case"syncAllConversations":await e.conversations.syncAll(n.consentStates),H({id:i,action:s,result:void 0});break;case"getConversationById":{const t=e.conversations.getConversationById(n.id),r=t?await M(t):void 0;H({id:i,action:s,result:r});break}case"getMessageById":{const t=e.conversations.getMessageById(n.id),r=t?S(t):void 0;H({id:i,action:s,result:r});break}case"getDmByInboxId":{const t=e.conversations.getDmByInboxId(n.inboxId),r=t?await M(t):void 0;H({id:i,action:s,result:r});break}case"getHmacKeys":{const t=e.conversations.getHmacKeys(),n=Object.fromEntries(Array.from(t.entries()).map((([e,t])=>[e,t.map(T)])));H({id:i,action:s,result:n});break}case"syncGroup":{const e=t(n.id);await e.sync();const r=await M(e);H({id:i,action:s,result:r});break}case"updateGroupName":{const e=t(n.id);await e.updateName(n.name),H({id:i,action:s,result:void 0});break}case"updateGroupDescription":{const e=t(n.id);await e.updateDescription(n.description),H({id:i,action:s,result:void 0});break}case"updateGroupImageUrlSquare":{const e=t(n.id);await e.updateImageUrl(n.imageUrl),H({id:i,action:s,result:void 0});break}case"sendGroupMessage":{const e=t(n.id),r=await e.send(b(w(n.content)));H({id:i,action:s,result:r});break}case"sendOptimisticGroupMessage":{const e=t(n.id).sendOptimistic(b(w(n.content)));H({id:i,action:s,result:e});break}case"publishGroupMessages":{const e=t(n.id);await e.publishMessages(),H({id:i,action:s,result:void 0});break}case"getGroupMessages":{const e=t(n.id),r=(await e.messages(n.options)).map((e=>S(e)));H({id:i,action:s,result:r});break}case"getGroupMembers":{const e=t(n.id),r=await e.members();H({id:i,action:s,result:r});break}case"getGroupAdmins":{const e=t(n.id).admins;H({id:i,action:s,result:e});break}case"getGroupSuperAdmins":{const e=t(n.id).superAdmins;H({id:i,action:s,result:e});break}case"getGroupConsentState":{const e=t(n.id).consentState;H({id:i,action:s,result:e});break}case"updateGroupConsentState":t(n.id).updateConsentState(n.state),H({id:i,action:s,result:void 0});break;case"addGroupAdmin":{const e=t(n.id);await e.addAdmin(n.inboxId),H({id:i,action:s,result:void 0});break}case"removeGroupAdmin":{const e=t(n.id);await e.removeAdmin(n.inboxId),H({id:i,action:s,result:void 0});break}case"addGroupSuperAdmin":{const e=t(n.id);await e.addSuperAdmin(n.inboxId),H({id:i,action:s,result:void 0});break}case"removeGroupSuperAdmin":{const e=t(n.id);await e.removeSuperAdmin(n.inboxId),H({id:i,action:s,result:void 0});break}case"addGroupMembers":{const e=t(n.id);await e.addMembersByIdentifiers(n.identifiers),H({id:i,action:s,result:void 0});break}case"removeGroupMembers":{const e=t(n.id);await e.removeMembersByIdentifiers(n.identifiers),H({id:i,action:s,result:void 0});break}case"addGroupMembersByInboxId":{const e=t(n.id);await e.addMembers(n.inboxIds),H({id:i,action:s,result:void 0});break}case"removeGroupMembersByInboxId":{const e=t(n.id);await e.removeMembers(n.inboxIds),H({id:i,action:s,result:void 0});break}case"isGroupAdmin":{const e=t(n.id).isAdmin(n.inboxId);H({id:i,action:s,result:e});break}case"isGroupSuperAdmin":{const e=t(n.id).isSuperAdmin(n.inboxId);H({id:i,action:s,result:e});break}case"getDmPeerInboxId":{const e=t(n.id).dmPeerInboxId();H({id:i,action:s,result:e});break}case"updateGroupPermissionPolicy":{const e=t(n.id);await e.updatePermission(n.permissionType,n.policy,n.metadataField),H({id:i,action:s,result:void 0});break}case"getGroupPermissions":{const e=t(n.id),r=(await M(e)).permissions;H({id:i,action:s,result:r});break}case"getGroupMessageDisappearingSettings":{const e=t(n.id).messageDisappearingSettings(),r=e?(e=>({fromNs:e.fromNs,inNs:e.inNs}))(e):void 0;H({id:i,action:s,result:r});break}case"updateGroupMessageDisappearingSettings":{const e=t(n.id);await e.updateMessageDisappearingSettings(n.fromNs,n.inNs),H({id:i,action:s,result:void 0});break}case"removeGroupMessageDisappearingSettings":{const e=t(n.id);await e.removeMessageDisappearingSettings(),H({id:i,action:s,result:void 0});break}case"isGroupMessageDisappearingEnabled":{const e=t(n.id).isMessageDisappearingEnabled();H({id:i,action:s,result:e});break}case"streamGroupMessages":{const e=t(n.groupId),r=(e,t)=>{e?$({type:"message",streamId:n.streamId,error:e}):V({type:"message",streamId:n.streamId,result:t?S(t):void 0})},a=e.stream(r);q.set(n.streamId,a),H({id:i,action:s,result:void 0});break}case"getGroupPausedForVersion":{const e=t(n.id).pausedForVersion();H({id:i,action:s,result:e});break}case"getGroupHmacKeys":{const e=t(n.id).getHmacKeys();H({id:i,action:s,result:e});break}}}catch(e){(e=>{self.postMessage(e)})({id:i,action:s,error:e})}};
//# sourceMappingURL=client.js.map
